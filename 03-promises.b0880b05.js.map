{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,oBAC9BE,KAAMH,SAASC,cAAc,mBAC7BG,OAAQJ,SAASC,cAAc,oBAC/BI,OAAQL,SAASC,cAAc,qBAqBjC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,EACFI,EAAI,CAACG,SAAAT,EAAUL,MAAAM,IAEfM,EAAI,CAACE,SAAAT,EAAUL,MAAAM,G,GAEhBA,E,IAINS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUd,EAAKgB,EAALhB,MACjBiB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANpB,EAAM,M,IAEvEqB,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUd,EAAKgB,EAALhB,MAClBiB,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANpB,EAAM,M,IAnCrEJ,EAASC,KAAK0B,iBAAiB,UAE/B,SAAuBC,GACrBA,EAAIC,iBAOJ,IALA,IAAIzB,EAAQ0B,OAAO9B,EAASI,MAAM2B,OAC9B1B,EAAOyB,OAAO9B,EAASK,KAAK0B,OAC5BzB,EAASwB,OAAO9B,EAASM,OAAOyB,OAG5BC,EAAI,EAAGA,GAAK1B,EAAQ0B,GAAI,EAC9BxB,EAAcwB,EAAG5B,GACjBA,GAASC,EAGXL,EAASC,KAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name = \"delay\"]'),\n  step: document.querySelector('[name = \"step\"]'),\n  amount: document.querySelector('[name =\"amount\"]'),\n  button: document.querySelector('[type =\"submit\"]'),\n};\n\nelements.form.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(elements.delay.value);\n  let step = Number(elements.step.value);\n  let amount = Number(elements.amount.value);\n  let position;\n\n  for(let i = 1; i <= amount; i+= 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n\n  elements.form.reset() \n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay});\n      } else {\n        rej({position, delay});\n      };\n    }, delay);\n  });\n\npromise\n.then(({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n})\n.catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$elements","form","document","querySelector","delay","step","amount","button","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","Number","value","i","reset"],"version":3,"file":"03-promises.b0880b05.js.map"}